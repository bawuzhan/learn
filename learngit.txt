git的历史  linux写的  因为他希望分布式存储
Git的特点分布式存储 svn的特点是集中式存储
分布式存储的特点是 不需要上传到集中服务器  解决了集中服务器挂掉或者网速不好的尴尬处境

git 的使用方式

1.创建一个文件夹 作为git的仓库  用来存放所有要git来管理的文件

2.需要给你的电脑设置一个id来让git知道你的账号 就是配置一下你的电脑和git服务关联
git config --global user.name 'xxxxx'
git config --global user.email 'xxxx.com'
这一步只需要执行一次就够了 让git认识你就行了 不用总认识   除非他提示

3.在这个文件夹下  执行 git init 初始化这个仓库  
在这个文件夹下 会产生一个 .git的文件   这个文件就是说明这个文件里边的所有东西都由git来管理了

4.在这个文件夹里边就可以 创建你的项目了
例如说我创建了这么一个learngit.txt的文件

5.执行git add learngit  说明要把这个文件添加到仓库
也可以执行  git add . 说明把文件夹下的所有的文件都添加到这个仓库

6.用命令git commit告诉git 把文件提交到仓库
git commit -m '这里是写本次提交的说明（修改了什么东西等）'

7.提交成功后，如果你想查看当前仓库的状态可以执行命令git status
git status执行会告诉你文件有没有变化 如果有文件有修改 并且没有提交的话 就提示你提交   如果没有修改的话就不做提示

8.如果上一次文件的修改你忘记了修改什么了 当然git会让你查看你上一次做了什么修改
git diff会告诉你做了什么修改（如果已经commit提交过   那么git diff就不起作用了）
知道做了什么修改 再做提交就放心多了

9.有时候我们修改文件做了错误的操作，此时需要回退版本
回退版本之前我们如果不知道要回退到哪个版本的话 
需要打印之前的版本记录使用 git log命令
git log 命令会打印出你提交的所有的版本的记录 
每条记录包括一个经过sha1加密过的id（不同于svn的1,2,3）是为了避免多人操作时id发生冲突
还包括了每条记录的注释信息 和 修改的时间
如果历史记录特别多 看起来很乱可以执行
git log --pretty=oneline  此时所有的历史记录  每一条都在一行显示
回归正题  怎么回退版本
git reset --hard HEAD^   是回退到上一条历史记录
HEAD的意思代表当前的版本  HEAD^代表上一条记录  HEAD^^代表上上条记录   依次类推
那么回退到上100条记录呢   当然不会让你写100个^ 用HEAD~100即可

10.回退到之前的版本了，但是我又想回来  发现回不来了 
如果你命令行还没有关掉的话 你可以向上找到最新的版本信息
执行命令 git reset +版本的id的前几位就可以回到那个版本（HEAD指向哪个版本号就会回到那个版本，实现时间穿梭）
但是你找不到那个版本的id了还是有其他方法的
git reflog用来记录你的每一次执行的命令
终于你又可以拿到想要的版本号了

11.工作区与暂存区
工作区 就是电脑里工作时创建的这个目录 比如这个learngit
工作区有一个隐藏的目录 这个不算工作区，而是Git的版本库
Git的版本库里边好多东西 最重要的就是称为stage的暂存区 还有我们自动创建的一个分支master 以及指向HEAD的一个指针HEAD

前面讲我们把文件往git的版本库里添加的时候分为两步
第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区
第二部使用git commit提交更改 实际上是把暂存区的所有内容提交到当前的分支
因为我们创建git版本的时候 创建了唯一的master分支，所以，现在， git commit就是往master分支上提交更改

12.git管理的是修改 不是文件
修改文件后 直接执行git commit 而不先执行git add添加到暂存区的 所以查看git diff的时候会告诉你当前修改的文件的地方
所以他没有被提交 因为暂存区里边没有东西  所以你需要先执行git add 提交到暂存区   然后再通过git commit提交到分支  

13.管理修改
撤销修改的几种请款
1.当你改乱了工作区某个文件的内容时，想直接丢弃工作区的修改时，用命令git checkout -- learngit.txt  
相当于你修改了文件 什么都没做 然后不想要现在修改的东西了   想返回这些修改
2.你不但改了内容 而且还git add 添加到了暂存区 想丢弃这些内容 用git reset HEAD learngit.txt 可以把暂存区的修改撤销掉
然后再执行git checkout -- learngit.txt 就可以撤销git add learngit.txt操作和 修改文件的操作
3.如果将修改已经git commit到了版本库时  就可以用 git reset --hard HEAD^回退到上一个版本

14.删除文件
一种你可以 手动删除文件test.txt(默认已经提交到版本库) 你确定要删除 执行命令 git rm test.txt删除文件  然后git commit 提交这次的删除操作
一种是你删错了   你可以使用git cheakout -- test.txt 可以恢复你的修改 这样之前删除的文件又存在了

15. 远程仓库
现在你想做的在本地仓库创建了一个git仓库后 又想在github上创建一个git仓库 并且让这两个仓库进行远程同步，
这样github上的仓库既可以作为备份又可以让其他人通过这个仓库来协作开发
创建github远程仓库





